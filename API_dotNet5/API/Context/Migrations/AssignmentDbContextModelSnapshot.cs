// <auto-generated />
using System;
using API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Context.Migrations
{
    [DbContext(typeof(AssignmentDbContext))]
    partial class AssignmentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Assignment")
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Lib.Entites.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDateTime = new DateTime(2021, 1, 23, 21, 45, 26, 478, DateTimeKind.Local).AddTicks(5119),
                            Name = "System Administrator",
                            Password = "WxgDYWImTc0gGOyf2pFZL65Jr8QGlVAwk7ZVAWK+/9kR408G",
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreationDateTime = new DateTime(2021, 1, 23, 21, 45, 26, 494, DateTimeKind.Local).AddTicks(1558),
                            Name = "Mr.Writer",
                            Password = "/MkO5ffEZqw/ZWDhQacfplXskVhhXIjctXKlYd2BzZufwGsn",
                            Role = "Writer",
                            Username = "writer"
                        });
                });

            modelBuilder.Entity("Lib.Entites.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsTopic")
                        .HasColumnType("bit");

                    b.Property<int?>("PostForStoryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TopicForStoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PostForStoryId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Lib.Entites.Story", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TopicId")
                        .IsUnique();

                    b.ToTable("Stories");
                });

            modelBuilder.Entity("Lib.Entites.Post", b =>
                {
                    b.HasOne("Lib.Entites.ApplicationUser", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lib.Entites.Story", "PostForStory")
                        .WithMany("Posts")
                        .HasForeignKey("PostForStoryId");

                    b.Navigation("Author");

                    b.Navigation("PostForStory");
                });

            modelBuilder.Entity("Lib.Entites.Story", b =>
                {
                    b.HasOne("Lib.Entites.Post", "Topic")
                        .WithOne("TopicForStory")
                        .HasForeignKey("Lib.Entites.Story", "TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("Lib.Entites.Post", b =>
                {
                    b.Navigation("TopicForStory");
                });

            modelBuilder.Entity("Lib.Entites.Story", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
